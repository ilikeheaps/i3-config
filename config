# my i3 config file based on i3 config file (v4)

# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written with the Colemak layout in mind.

# TODO move the script or remove
# X session settings not related to the WM itself (layout, dpi, X background)
exec xsession-settings

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# default type for new containers
workspace_layout stacking
# choose appropriate orientation based on display dimensions
default_orientation auto
# doesnt work
# hide borders when there is only one window
# hide_edge_borders smart

# border style/size
default_border pixel 4

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up f
set $down s
set $left r
set $right t

set $terminal konsole -e fish
set $eshell emacsclient -e "(open-eshell)" -c

set $scripts ~/.config/i3/scripts

set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# st doesn't respect dpi settings :(
# alternatives: sakura?...
bindsym $mod+Shift+Return exec $terminal
# start eshell
bindsym $mod+Return exec $eshell

# open emacs window (*scratch* buffer by default)
bindsym $mod+h exec emacsclient -c

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+p exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+u split v

# cut/paste windows
# bindsym $mod+w mark _copy
# bindsym $mod+y mark _paste, [con_mark=_copy] move to mark _paste, [con_mark=_copy] focus

# enter fullscreen mode for the focused container
bindsym $mod+l fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+y layout stacking
bindsym $mod+i layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the child container
bindsym $mod+a focus child
# focus the parent container
bindsym $mod+w focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace and switch to it
bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10; workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+Mod1+x restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 5 px or 5 ppt
        bindsym $down       resize grow height 5 px or 5 ppt
        bindsym $up         resize shrink height 5 px or 5 ppt
        bindsym $right      resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 5 px or 5 ppt
        bindsym Down        resize grow height 5 px or 5 ppt
        bindsym Up          resize shrink height 5 px or 5 ppt
        bindsym Right       resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# (currently disabled)
# bindsym $mod+d mode "resize"

# mode for moving workspaces between outputs
mode "workspace" {

        bindsym $mod+Shift+$left move workspace to output left
        bindsym $mod+Shift+$down move workspace to output down
        bindsym $mod+Shift+$up move workspace to output up
        bindsym $mod+Shift+$right move workspace to output right

        bindsym $mod+$left focus output left
        bindsym $mod+$down focus output down
        bindsym $mod+$up focus output up
        bindsym $mod+$right focus output right

        bindsym $mod+v mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+v mode "workspace"

mode "launcher" {
     bindsym s exec $scripts/run-surf; mode "default"
     bindsym g exec $scripts/google; mode "default"
     bindsym t exec $terminal; mode "default"
     bindsym e exec $eshell; mode "default"
     bindsym i exec $scripts/open-info; mode "default"
     bindsym c exec chromium-browser; mode "default"
     bindsym k exec konsole -e fish; mode "default"
     bindsym n exec st -f "Fira Mono:pixelsize=18" -e fish; mode "default"

     bindsym Escape mode "default"
}

bindsym $mod+d mode "launcher"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        tray_output primary
}

# screenshots with scrot
bindsym Print exec scrot $(echo "$HOME/Pictures/Screens/%Y-%m-%d-%H:%M:%S-\$wx\$h.png")

# TODO can you do any mapping over modes? So you could get a mode but add a modifier to all keys or something?
# TODO can you have a binding to return to the previous mode?
mode "insert" {
     bindsym $mod+Escape mode "default"
}

# TODO could you inherit mode mappings?
mode "moveFocus" {
     bindsym $up focus up
     bindsym $down focus down
     bindsym $left focus left
     bindsym $right focus right

     bindsym Escape mode "default"
}

mode "moveWindow" {
     bindsym $up focus up
     bindsym $down focus down
     bindsym $left focus left
     bindsym $right focus right

     bindsym Escape mode "default"
}

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle

# Screen brightness controls
# (ThinkPads handle on hardware level)
# bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
# bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
# (TODO make the script work)
bindsym XF86TouchpadToggle exec $scripts/touchpad-toggle.sh

# Media player controls
# (Do not have playerctl)
# bindsym XF86AudioPlay exec playerctl play
# bindsym XF86AudioPause exec playerctl pause
# bindsym XF86AudioNext exec playerctl next
# bindsym XF86AudioPrev exec playerctl previous

# Somewhat crude tablet controls
mode "tablet" {
     bindsym w exec $scripts/tablet-scale.sh 2  0   0
     bindsym r exec $scripts/tablet-scale.sh 2  0   0.5
     bindsym x exec $scripts/tablet-scale.sh 2  0   1
     bindsym f exec $scripts/tablet-scale.sh 2  0.5 0
     bindsym s exec $scripts/tablet-scale.sh 2  0.5 0.5
     bindsym c exec $scripts/tablet-scale.sh 2  0.5 1
     bindsym p exec $scripts/tablet-scale.sh 2  1   0
     bindsym t exec $scripts/tablet-scale.sh 2  1   0.5
     bindsym v exec $scripts/tablet-scale.sh 2  1   1
     bindsym Shift+s exec $scripts/tablet-scale.sh 1  0   0
     bindsym a mode "default"
     bindsym Escape mode "default"
}
bindsym $mod+x mode "tablet"
