# -*- eval: (rainbow-mode 1) -*-
# ^ Emacs settings
# ^ TODO move outside this file (how?)
# my i3 config file based on i3 config file (v4)
# for i3 version 4.18.3 (2020-10-19)

# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written with the Colemak layout in mind.

exec xsetroot -solid "#333333"

# for sway (i3-compatible Wayland compositor)
## input settings
input * {
  xkb_layout "pl"
  xkb_variant "colemak"
  xkb_options "eurosign:e"
}
## output settings
# TODO add some defaults (pick highest resolution, then highest refresh rate for that)

# [Unknown] being AOC
output "Unknown U34G2G4R3 0x00000943" {
  mode 3440x1440@144.001Hz
  adaptive_sync on
  # scale 1.5 # TODO find replacements for X programs before setting this (X gets blurry)
}

# Having issues with cable/adapter for this one, need to run @120Hz instead of @144Hz
output "Unknown ASUS XG16A 0x0000879F" {
  mode 1920x1080@120Hz
  adaptive_sync off
  # adaptive_sync on
}

# 16" portable display from Aliexpress
output "Unknown ASM-160QC 0x00000125" {
  mode 2560x1600@119.999Hz
  scale 1.5
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 10

# default type for new containers
workspace_layout stacking
# choose appropriate orientation based on display dimensions
default_orientation auto
# doesnt work
# hide borders when there is only one window
# hide_edge_borders smart

# border style/size
# TODO[script] configure depending on screen DPI (can't in plain i3 config)
default_border pixel 6

# class                 border  backgr. text    indicator child_border
client.focused          #e07060 #e07060 #000000 #2e9ef4   #e07060
client.focused_inactive #2340c0 #2340c0 #ffffff #484e50   #2340c0
client.unfocused        #333333 #222222 #bbbbbb #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

focus_wrapping no

# For EA Origin (game launcher) -- doesn't work otherwise
for_window [title="^Origin$"] floating enable

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up f
set $down s
set $left r
set $right t

set $terminal konsole -e fish
set $eshell emacsclient -e "(open-eshell)" -c

set $scripts ~/.config/i3/scripts

set $mod Mod4

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
# st doesn't respect dpi settings :(
# alternatives: sakura?...
bindsym $mod+Shift+Return exec $terminal
# start eshell
bindsym $mod+Return exec $eshell

bindsym $mod+k mode "display"
mode "display" {
  # switch display input to this (for sharing with another system)
  bindsym $mod+k exec ddcutil setvcp 0x60 0x0f; mode "default"
  bindsym $mod+e exec ddcutil setvcp 0x60 0x10; mode "default"
  bindsym Escape mode "default"
}

# TODO?
# rename window/container
# bindsym $mod+g exec echo `echo foo | dmenu` # $scripts/rename-focused.sh
# bindsym $mod+Shift+g title_format "%title"

# open emacs window (*scratch* buffer by default)
bindsym $mod+h exec emacsclient -c

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+p exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+n split h

# split in vertical orientation
bindsym $mod+u split v

# cut/paste windows
# bindsym $mod+w mark _copy
# bindsym $mod+y mark _paste, [con_mark=_copy] move to mark _paste, [con_mark=_copy] focus

# enter fullscreen mode for the focused container
bindsym $mod+l fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+y layout stacking
bindsym $mod+i layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the child container
bindsym $mod+a focus child
# focus the parent container
bindsym $mod+w focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show


# switch to workspace
bindsym $mod+m exec $scripts/focus-workspace.sh

bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10


# move focused container to workspace and switch to it
bindsym $mod+Shift+m exec $scripts/move-and-focus-workspace.sh

bindsym $mod+Shift+1 move container to workspace 1; workspace 1
bindsym $mod+Shift+2 move container to workspace 2; workspace 2
bindsym $mod+Shift+3 move container to workspace 3; workspace 3
bindsym $mod+Shift+4 move container to workspace 4; workspace 4
bindsym $mod+Shift+5 move container to workspace 5; workspace 5
bindsym $mod+Shift+6 move container to workspace 6; workspace 6
bindsym $mod+Shift+7 move container to workspace 7; workspace 7
bindsym $mod+Shift+8 move container to workspace 8; workspace 8
bindsym $mod+Shift+9 move container to workspace 9; workspace 9
bindsym $mod+Shift+0 move container to workspace 10; workspace 10


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+Mod1+x restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 5 px or 5 ppt
        bindsym $down       resize grow height 5 px or 5 ppt
        bindsym $up         resize shrink height 5 px or 5 ppt
        bindsym $right      resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 5 px or 5 ppt
        bindsym Down        resize grow height 5 px or 5 ppt
        bindsym Up          resize shrink height 5 px or 5 ppt
        bindsym Right       resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# (currently disabled)
# bindsym $mod+d mode "resize"

# mode for moving workspaces between outputs
bindsym $mod+v mode "workspace"
mode "workspace" {
        bindsym $mod+Shift+$left move workspace to output left
        bindsym $mod+Shift+$down move workspace to output down
        bindsym $mod+Shift+$up move workspace to output up
        bindsym $mod+Shift+$right move workspace to output right

        bindsym $mod+$left focus output left
        bindsym $mod+$down focus output down
        bindsym $mod+$up focus output up
        bindsym $mod+$right focus output right

        bindsym $mod+v mode "default"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# bindsym $mod+v mode "sound"
# mode "sound" {
#   bindsym s exec ~/scripts/alsa/speakers.sh; mode "default"
#   bindsym h exec ~/scripts/alsa/headphones.sh; mode "default"
#
#   bindsym Escape mode "default"
# }

# TODO maybe bind: konsole -e $(dmenu ...)
mode "launcher" {
     bindsym h exec konsole -e ghci; mode "default"
     bindsym s exec $scripts/run-surf; mode "default"
     bindsym g exec $scripts/google; mode "default"
     bindsym v exec pavucontrol; mode "default"
     bindsym t exec $terminal; mode "default"
     bindsym e exec $eshell; mode "default"
     bindsym i exec $scripts/open-info; mode "default"
     bindsym Shift+c exec chromium-browser --incognito; mode "default"
     bindsym c exec chromium-browser; mode "default"
     bindsym k exec konsole -e fish; mode "default"
     bindsym n exec st -f "Fira Mono:pixelsize=18" -e fish; mode "default"
     # open Tabs Outliner extension in Chromium
     # [--app=] -- open with minimal UI
     bindsym o exec chromium-browser --new-window --app="chrome-extension://eggkanocgddhmamlbiijnphhppkpkmkl/activesessionview.html?type=clone"; mode "default"
     bindsym d append_layout ~/.config/i3/layout-3-column.json; exec $terminal; exec $terminal; exec $terminal; mode "default"
     bindsym b exec blueman-manager; mode "default"
     bindsym f exec dolphin --new-window ~ ; mode "default"
     bindsym shift+f exec $scripts/launch-dolphin.sh ; mode "default"

     bindsym Escape mode "default"
}

bindsym $mod+d mode "launcher"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
        mode hide
        modifier $mod
        tray_output primary
        font -CTDB-Fira Mono-normal-normal-normal-*-20-*-*-*-m-0-iso10646-1
        font pango:Fira Mono 14
}

# screenshots
bindsym Print exec $scripts/screenshot.sh

bindsym $mod+j mode "screen"
mode "screen" {
  bindsym --release j mode "default" ; exec $scripts/screenshot.sh
  bindsym --release a mode "default" ; exec $scripts/screenshot.sh

  bindsym --release s mode "default" ; exec $scripts/screenshot.sh --select

  bindsym --release w mode "default" ; exec $scripts/screenshot.sh --window

  bindsym b mode "default" ; exec dolphin --new-window "$($scripts/screenshot.sh --print-dir)"

  bindsym Escape mode "default"
}

# TODO can you do any mapping over modes? So you could get a mode but add a modifier to all keys or something?
# TODO can you have a binding to return to the previous mode?
mode "insert" {
     bindsym $mod+Escape mode "default"
}

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +1dB
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -1dB
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# Screen brightness controls
# (ThinkPads handle on hardware level)
# bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
# bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Touchpad controls
# (TODO make the script work)
bindsym XF86TouchpadToggle exec $scripts/touchpad-toggle.sh

# Media player controls
# (Do not have playerctl)
# bindsym XF86AudioPlay exec playerctl play
# bindsym XF86AudioPause exec playerctl pause
# bindsym XF86AudioNext exec playerctl next
# bindsym XF86AudioPrev exec playerctl previous

# Somewhat crude tablet controls
mode "tablet-grid" {
     bindsym w exec $scripts/tablet-scale.sh 2  0   0
     bindsym r exec $scripts/tablet-scale.sh 2  0   0.5
     bindsym x exec $scripts/tablet-scale.sh 2  0   1
     bindsym f exec $scripts/tablet-scale.sh 2  0.5 0
     bindsym s exec $scripts/tablet-scale.sh 2  0.5 0.5
     bindsym c exec $scripts/tablet-scale.sh 2  0.5 1
     bindsym p exec $scripts/tablet-scale.sh 2  1   0
     bindsym t exec $scripts/tablet-scale.sh 2  1   0.5
     bindsym v exec $scripts/tablet-scale.sh 2  1   1
     bindsym Shift+s exec $scripts/tablet-scale.sh 1  0   0
     bindsym a mode "default"
     bindsym Escape mode "default"

     # perform with modifier to immediately return
     bindsym $mod+w exec $scripts/tablet-scale.sh 2  0   0; mode "default"
     bindsym $mod+r exec $scripts/tablet-scale.sh 2  0   0.5; mode "default"
     bindsym $mod+x exec $scripts/tablet-scale.sh 2  0   1; mode "default"
     bindsym $mod+f exec $scripts/tablet-scale.sh 2  0.5 0; mode "default"
     bindsym $mod+s exec $scripts/tablet-scale.sh 2  0.5 0.5; mode "default"
     bindsym $mod+c exec $scripts/tablet-scale.sh 2  0.5 1; mode "default"
     bindsym $mod+p exec $scripts/tablet-scale.sh 2  1   0; mode "default"
     bindsym $mod+t exec $scripts/tablet-scale.sh 2  1   0.5; mode "default"
     bindsym $mod+v exec $scripts/tablet-scale.sh 2  1   1; mode "default"
     bindsym $mod+Shift+s exec $scripts/tablet-scale.sh 1  0   0; mode "default"
}

# less crude tablet controls
mode "tablet" {
     bindsym s exec $scripts/tablet-select-area.fish
     bindsym f exec $scripts/tablet-scale.sh 1 0 0
     bindsym t exec $scripts/tablet-scale.sh 1 0 0; exec $scripts/tablet-select-area.fish

     # perform with modifire to immediately return
     bindsym $mod+s exec $scripts/tablet-select-area.fish; mode "default"
     # ^ TODO this doesn't work properly, need to release 's' quickly
     bindsym $mod+f exec $scripts/tablet-scale.sh 1 0 0; mode "default"
     bindsym $mod+t exec $scripts/tablet-scale.sh 1 0 0; exec $scripts/tablet-select-area.fish; mode "default"

     bindsym $mod+x mode "tablet-grid"
     bindsym x mode "tablet-grid"
     bindsym a mode "default"
     bindsym Escape mode "default"
}
bindsym $mod+x mode "tablet"

bindsym $mod+c mode "move"
mode "move" {
  bindsym $mod+c mode "move-persist"
  bindsym $mod+$left move left; mode "default"
  bindsym $mod+$down move down; mode "default"
  bindsym $mod+$up move up; mode "default"
  bindsym $mod+$right move right; mode "default"

  bindsym Escape mode "default"
}

mode "move-persist" {
  bindsym $mod+$left move left
  bindsym $mod+$down move down
  bindsym $mod+$up move up
  bindsym $mod+$right move right

  bindsym $mod+c mode "default"
  bindsym Escape mode "default"
}
